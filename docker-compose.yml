version: '2.0'
services:
  api:
    build:
      dockerfile: ./Dockerfile.api
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    depends_on:
      - db
      # - ollama
    env_file:
      - .env.docker
    develop:
      watch:
        - action: sync+restart
          path: ./src
          target: /app/src
        - action: rebuild
          path: requirements.txt
  queue:
    build:
      dockerfile: ./Dockerfile.queue
    volumes:
      - .:/app
    depends_on:
      - db
      - redis
      # - ollama
    env_file:
      - .env.docker

  db:
    image: postgres:latest
    volumes:
      - db:/var/lib/postgresql/data
    env_file:
      - .env.docker
    ports:
      - "5432:5432"

  ollama:
    container_name: ollama
    build:
      context: .
      dockerfile: ./ollama/Dockerfile
      args:
        - MODEL_NAME=phi3:mini
    volumes:
      - ollama:/root/.ollama
    ports:
      - '11435:11434'
    environment:
      - OLLAMA_HOST=0.0.0.0:11435
      - OLLAMA_NUM_PARALLEL=10 # Number of max allowed requests simultaneously
      - OLLAMA_MAX_LOADED_MODELS=4 # Number of max allowed models loaded simultaneously
      - gpus=all
    pull_policy: always
    tty: true
    restart: unless-stopped
  #    deploy:
  #      resources:
  #        reservations:
  #          devices:
  #            - driver: nvidia
  #              count: 1
  #              capabilities: [gpu]
  dashboard:
    build:
      context: .
      dockerfile: ./dashboard/Dockerfile
    ports:
      - "3000:3000"

  redis:
    image: redis:latest
    volumes:
      - redis:/data
    ports:
      - "6379:6379"

  # cve_search:
  #   extends:
  #     file: cve-search/docker-compose.yml
  #     service: cve_search
  #   environment:
  #     - NVD_NIST_API_KEY=${NVD_NIST_API_KEY}
  # mongo:
  #   extends:
  #     file: cve-search/docker-compose.yml
  #     service: mongo
  # redis:
  #   extends:
  #     file: cve-search/docker-compose.yml
  #     service: redis
volumes:
  ollama:
  db:
  dashboard:
  redis:
# networks:
#   cve_search: