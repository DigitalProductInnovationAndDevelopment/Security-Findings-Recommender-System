"""init

Revision ID: 8053edadff0b
Revises: 
Create Date: 2024-08-03 23:19:36.222215

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes
import db


# revision identifiers, used by Alembic.
revision = '8053edadff0b'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('recommendation_task',
    sa.Column('status', sa.Enum('PENDING', 'COMPLETED', 'FAILED', name='taskstatus'), nullable=False),
    sa.Column('celery_task_id', sa.String(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('aggregated_recommendations',
    sa.Column('solution', sa.String(), nullable=True),
    sa.Column('meta', sa.JSON(), nullable=True),
    sa.Column('recommendation_task_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['recommendation_task_id'], ['recommendation_task.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('findings',
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('title_list', sa.JSON(), nullable=True),
    sa.Column('description_list', sa.JSON(), nullable=True),
    sa.Column('locations_list', sa.JSON(), nullable=True),
    sa.Column('category', sa.JSON(), nullable=True),
    sa.Column('cwe_id_list', sa.JSON(), nullable=True),
    sa.Column('cve_id_list', sa.JSON(), nullable=True),
    sa.Column('priority', sa.Integer(), nullable=True),
    sa.Column('severity', sa.Integer(), nullable=True),
    sa.Column('language', sa.String(), nullable=True),
    sa.Column('source', sa.String(), nullable=True),
    sa.Column('report_amount', sa.Integer(), nullable=False),
    sa.Column('raw_data', sa.JSON(), nullable=True),
    sa.Column('recommendation_task_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['recommendation_task_id'], ['recommendation_task.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('findings_aggregated_association',
    sa.Column('finding_id', sa.Integer(), nullable=False),
    sa.Column('aggregated_recommendation_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['aggregated_recommendation_id'], ['aggregated_recommendations.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['finding_id'], ['findings.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('finding_id', 'aggregated_recommendation_id')
    )
    op.create_table('recommendations',
    sa.Column('description_short', sa.String(), nullable=True),
    sa.Column('description_long', sa.String(), nullable=True),
    sa.Column('search_terms', sa.String(), nullable=True),
    sa.Column('meta', sa.JSON(), nullable=True),
    sa.Column('category', sa.JSON(), nullable=True),
    sa.Column('finding_id', sa.Integer(), nullable=True),
    sa.Column('recommendation_task_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['finding_id'], ['findings.id'], ),
    sa.ForeignKeyConstraint(['recommendation_task_id'], ['recommendation_task.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('recommendations')
    op.drop_table('findings_aggregated_association')
    op.drop_table('findings')
    op.drop_table('aggregated_recommendations')
    op.drop_table('recommendation_task')
    # ### end Alembic commands ###